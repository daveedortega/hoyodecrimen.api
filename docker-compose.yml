services:
  hoyodecrimen:
    container_name: hoyodecrimen
    deploy:
      replicas: 1
      restart_policy:
        condition: any
    environment:
      MODULE_NAME: "${MODULE_NAME}"
      LOG_LEVEL: "${LOG_LEVEL}"
      PORT: "${PORT}"
      SQLALCHEMY_DATABASE_URI: "${SQLALCHEMY_DATABASE_URI}"
      PRODUCTION: "${PRODUCTION}"
      #SENTRY_DSN: "${SENTRY_DNS}"
      CACHE_SECRET: "${CACHE_SECRET}"
    image: diegovalle/hoyodecrimen
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/"]
      interval: 180s
      timeout: 30s
      retries: 7
    volumes:
      - ./wsgi/static/.webassets-cache:/app/static/.webassets-cache
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 256M
    ports:
      - '8080:8080'
    depends_on:
      db:
        condition: service_healthy
    environment:
      - PUID=1000
      - PGID=1000
    env_file:
      - .env

  db:
    container_name: hoyodecrimendb
    environment:
      POSTGRES_USER: deploy
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: apihoyodecrimen
    image: postgis/postgis:14-3.2
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - default
    volumes:
      - ~/Downloads/postgres:/var/lib/postgresql/data
    ports:
      - 5405:5432
    restart: always
version: '3'
